{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "11147837_32e3ba7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-10-10T22:39:20Z",
      "side": 1,
      "message": "Thanks for creating the issue and adding the footer here. That said, we generally avoid relying on only the content from the issue tracker vs the commit message. Can you update this message with the important parts from the issue?\n\n```suggestion\nFix webserver ClassNotFoundException due to WAR missing failureaccess JAR\n\nThe pkg_war() rule is missing this runtime dependency. Without it we get\nexceptions like:\njava.lang.ClassNotFoundException: com.google.common.util.concurrent.internal.InternalFutureFailureAccess\n\nBug: Issue 450323474\n```",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 20
      },
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af16f7b4_a3b89617",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 4398326
      },
      "writtenOn": "2025-10-11T05:10:35Z",
      "side": 1,
      "message": "Done.\n\nit may difference due to limit of character in  single line and max title len.",
      "parentUuid": "11147837_32e3ba7f",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 20
      },
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f457f48a_905c5774",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 4398326
      },
      "writtenOn": "2025-10-13T05:27:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af16f7b4_a3b89617",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 20
      },
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57464bc4_a94c3f7d",
        "filename": "java/com/google/gitiles/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-10-10T22:39:20Z",
      "side": 1,
      "message": "This is only needed at runtime, so I think it should go into the top-level `BUILD` file in the `pkg_war()` rule. You could also add it to the `\"servlet\"` rule below in `runtime_deps` attribute.",
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7d40bc_90b45983",
        "filename": "java/com/google/gitiles/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 4398326
      },
      "writtenOn": "2025-10-11T05:00:42Z",
      "side": 1,
      "message": "In my opinion\n\nPutting it only in the top-level BUILD file or in other space feels a bit odd. \n\nThe root cause of this issue is that Bazel doesn’t handle recursive dependencies correctly. `failureaccess` is required because `guava` depends on it.\nTherefore, either Bazel’s rules correctly handle recursive dependencies—so there’s no need to declare `//lib:guava-failureaccess` separately—or you should declare it wherever `guava` is needed.",
      "parentUuid": "57464bc4_a94c3f7d",
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbc004b1_52f2c31e",
        "filename": "java/com/google/gitiles/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 4398326
      },
      "writtenOn": "2025-10-13T05:27:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff7d40bc_90b45983",
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b1affa8_e8c80209",
        "filename": "java/com/google/gitiles/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-10-13T23:32:07Z",
      "side": 1,
      "message": "\u003e Putting it only in the top-level BUILD file or in other space feels a bit odd.\n\nTo clarify on this, it\u0027s only needed in the WAR because another WAR that uses only this library JAR could provide its own guava-failureaccess at runtime (this is why gitiles plugin in Gerrit works fine). It\u0027s not a compile-time dependency and that\u0027s what `java_library` `deps` are for.",
      "parentUuid": "cbc004b1_52f2c31e",
      "revId": "7c5d339c7f4a077911b3f30c46b173b6865baee2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}