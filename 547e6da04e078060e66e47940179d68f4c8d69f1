{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b8c2aa2_092325c2",
        "filename": "java/com/google/gitiles/PathServlet.java",
        "patchSetId": 10
      },
      "lineNbr": 551,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-16T12:36:30Z",
      "side": 1,
      "message": "The current issue is that `head` is null here since you didn\u0027t set it in the repo in the testcase at PathServletTest.\nBut should this really be `HEAD` shouldn\u0027t it be the current branch (if branch) being viewed?\nSetting HEAD by issuing `repo.reset(\"refs/heads/master\") only sets the Ref HEAD to the commit-id of `master` which is not a valid edit-url (needs to be a branch).\nDon\u0027t know how to get the commit:ish from the gitilesUrl but it should be possible. Afterwhich you\u0027ll need to verify that the commit:ish is indeed a branch and not a commit-id or a tag.",
      "range": {
        "startLine": 551,
        "startChar": 10,
        "endLine": 551,
        "endChar": 14
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0345530b_26e3bca9",
        "filename": "javatests/com/google/gitiles/PathServletTest.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-16T12:36:30Z",
      "side": 1,
      "message": "You\u0027ll need to somehow set HEAD (currently, but I don\u0027t know if HEAD is what should be used. Perhaps as a fall-back if the commit:ish of the gitiles-url isn\u0027t a branch).\n`repo.reset(...)` sets `HEAD` but sets it to a commit-id which you cannot create a valid edit-url from, so by adding `repo.reset(...)` you get an edit-url but it won\u0027t work against Gerrit.\nI don\u0027t know how to set `HEAD` to f.i. `refs/heads/master` and collect it in PathServlet to build a valid edit-url.\n\nAlso the `assertThat` is backwards, should be `assertThat($ACTUAL_VALUE).isEqualTo($EXPECTED_VALUE);`\n\n```suggestion\n    repo.branch(\"master\").commit().add(\"editFoo\", \"Content\").create();\n    repo.reset(\"refs/heads/master\");\n\n    Map\u003cString, ?\u003e data \u003d buildData(\"/repo/+/master/editFoo\");\n\n    String editUrl \u003d (String) getBlobData(data).get(\"editUrl\");\n    String testUrl \u003d \"http://test-host-review/admin/repos/edit/repo/repo/branch/refs/heads/master/file/editFoo\";\n    assertThat(editUrl).isEqualTo(testUrl);\n```",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 118,
        "endChar": 43
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33f2db1_3a463b35",
        "filename": "javatests/com/google/gitiles/PathServletTest.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1132393
      },
      "writtenOn": "2024-05-27T11:53:53Z",
      "side": 1,
      "message": "Yeah, the problem is that unlike `Repository`, JGit\u0027s `TestRepository` does not have a method for checkout. But I guess the interesting thing here is to have an edit-url and not so much, if it works against Gerrit. So should I update the expected string to be non-working one?",
      "parentUuid": "0345530b_26e3bca9",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 118,
        "endChar": 43
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "960eb875_578b9975",
        "filename": "javatests/com/google/gitiles/PathServletTest.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-27T12:01:18Z",
      "side": 1,
      "message": "I am not certain that HEAD is the correct thing to use, it would be more clear if the viewed branch is used ([see other comment](https://gerrit-review.googlesource.com/c/gitiles/+/392465/comment/2b8c2aa2_092325c2/)).\nIt will confuse users if they are looking at a file in `stable-3.10` in gitiles and press `EDIT` and a change against `master` is created.",
      "parentUuid": "d33f2db1_3a463b35",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 118,
        "endChar": 43
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a96d58d_c06e04ad",
        "filename": "javatests/com/google/gitiles/PathServletTest.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1132393
      },
      "writtenOn": "2024-05-27T12:36:09Z",
      "side": 1,
      "message": "Yes, sorry about lack of focus. Uploaded a new failing patchset.",
      "parentUuid": "960eb875_578b9975",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 118,
        "endChar": 43
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a7c609d_9731e7cd",
        "filename": "javatests/com/google/gitiles/PathServletTest.java",
        "patchSetId": 10
      },
      "lineNbr": 118,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-28T05:48:16Z",
      "side": 1,
      "message": "I don\u0027t know what fails here, you\u0027ll have to debug the test-case and see what is wrong.",
      "parentUuid": "6a96d58d_c06e04ad",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 118,
        "endChar": 43
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96b9a9da_ebbacd3c",
        "filename": "javatests/com/google/gitiles/TestGitilesServlet.java",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-16T05:45:52Z",
      "side": 1,
      "message": "```suggestion\n  public static GitilesServlet create(\n      final TestRepository\u003cDfsRepository\u003e repo,\n      GitwebRedirectFilter gitwebRedirect,\n      BranchRedirect branchRedirect)\n      throws ServletException {\n    final String repoName \u003d repo.getRepository().getDescription().getRepositoryName();\n    GitilesServlet servlet \u003d\n        new GitilesServlet(\n            getTestConfig(),\n            new DefaultRenderer(\n                GitilesServlet.STATIC_PREFIX, ImmutableList.\u003cURL\u003eof(), repoName + \" test site\"),\n            TestGitilesUrls.URLS,\n            new TestGitilesAccess(repo.getRepository()),\n            new RepositoryResolver\u003cHttpServletRequest\u003e() {\n              @Override\n              public Repository open(HttpServletRequest req, String name)\n                  throws RepositoryNotFoundException {\n                if (!repoName.equals(name)) {\n                  throw new RepositoryNotFoundException(name);\n                }\n                return repo.getRepository();\n              }\n            },\n            null,\n            null,\n            null,\n            gitwebRedirect,\n            branchRedirect);\n\n    servlet.init(\n        new ServletConfig() {\n          @Override\n          public @Nullable String getInitParameter(String name) {\n            return null;\n          }\n\n          @Override\n          public Enumeration\u003cString\u003e getInitParameterNames() {\n            return Collections.enumeration(ImmutableList.\u003cString\u003eof());\n          }\n\n          @Override\n          public @Nullable ServletContext getServletContext() {\n            return null;\n          }\n\n          @Override\n          public String getServletName() {\n            return TestGitilesServlet.class.getName();\n          }\n        });\n    return servlet;\n  }\n  \n  public static Config getTestConfig() {\n    Config config \u003d new Config();\n    config.setString(\"gitiles\", null, \"gerritUrl\", TestGitilesUrls.URLS.getBaseGerritUrl(null));\n  }\n```",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 114,
        "endChar": 3
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "454e5334_c79f1629",
        "filename": "javatests/com/google/gitiles/TestGitilesServlet.java",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2024-05-16T07:03:43Z",
      "side": 1,
      "message": "I\u0027m sorry, this is also not working",
      "parentUuid": "96b9a9da_ebbacd3c",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 114,
        "endChar": 3
      },
      "revId": "547e6da04e078060e66e47940179d68f4c8d69f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}