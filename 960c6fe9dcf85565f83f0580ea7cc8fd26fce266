{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ed396099_0e448316",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-27T14:14:19Z",
      "side": 1,
      "message": "This is a breaking change for everyone that has used to using this script in the previous way.\n\nIMO, instead of removing the `PROPERTIES` variable, this change should only add `$@` to the end of the arguments list. This way both ways will work.\n\nAlso would be good to update the dev documentation so that it reflects how `run_dev` can be used to start gitiles in debug mode.",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2989761_f531e43a",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2023-09-27T14:28:56Z",
      "side": 1,
      "message": "\u003e IMO, instead of removing the PROPERTIES variable, this change should only add `$@` to the end of the arguments list. This way both ways will work.\n\nAt first, I tried to avoid the breaking change this way. But what can we do about `$1`? Keeping `$1` (`$1` is optional) and appending `$@` is not compatible.\n\nIf we want to avoid the breaking change, I suggest to create a new shell script.\n\n\u003e Also would be good to update the dev documentation so that it reflects how run_dev can be used to start gitiles in debug mode.\n\nAgreed. I\u0027ll do it as soon as we agree on a way to fix the previous point.",
      "parentUuid": "ed396099_0e448316",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "785f3abb_86186b62",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-27T14:52:42Z",
      "side": 1,
      "message": "\u003e  But what can we do about $1? Keeping $1 ($1 is optional) and appending $@ is not compatible.\n\nAccording to this [stackexchange answer](https://unix.stackexchange.com/questions/68322/how-can-i-remove-an-element-from-an-array-completely), this should be possible by:\n```\nset -- \"${@:2}\"\n```",
      "parentUuid": "c2989761_f531e43a",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fdd3307_6e99f0ba",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2023-09-27T15:13:23Z",
      "side": 1,
      "message": "If we do that, `$1` becomes mandatory (while it was not before this change) which is a breaking change, am I wrong? For the record, before this change, `$1` represents the value passed to `--jvm_flag\u003d-Dcom.google.gitiles.configPath`.",
      "parentUuid": "785f3abb_86186b62",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74d99b5c_a722fc43",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-27T15:16:55Z",
      "side": 1,
      "message": "Nope, at least in my testing you can skip all args and it should also work. Have a play with this simple script:\n```sh\necho \"1: $@\"\necho \"2: ${@:2}\"\n```\n\nWe can keep the `if` statement and then add `${@:}` on the end of the line and we should be fine.",
      "parentUuid": "6fdd3307_6e99f0ba",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e020e0e2_bf451844",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2023-09-27T15:27:28Z",
      "side": 1,
      "message": "The main use case for this change is the ability to run `tools/run_dev.sh --debug`. \nIMHO, what you are suggesting will not allow `tools/run_dev.sh --debug` to work. With your suggestion, `tools/run_dev.sh --debug` will be turned into `$ROOT/bazel-bin/java/com/google/gitiles/dev/dev --jvm_flag\u003d-Dcom.google.gitiles.configPath\u003d--debug` which will fail. I want to be able to use `--debug` without passing a `configPath`.",
      "parentUuid": "74d99b5c_a722fc43",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae534d15_3e0a0ef9",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-28T07:39:15Z",
      "side": 1,
      "message": "What would you say if we can _detect_ the debug flag on any position? Then, append it to the `PROPERTIES`.\n\n```sh\nif [[ $@ \u003d~ \"--debug\" ]]\nthen\n  echo \"has DEBUG\"\nelse\n  echo \"no DEBUG\"\nfi\n```\n\nThis way we can preserve the old interface and still be able to use `--debug` to enable debug.",
      "parentUuid": "e020e0e2_bf451844",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "452a5357_b8fe7510",
        "filename": "tools/run_dev.sh",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2023-09-28T08:19:31Z",
      "side": 1,
      "message": "The purpose of this change was to allow to pass *any* `$ROOT/bazel-bin/java/com/google/gitiles/dev/dev` supported flags via `tools/run_dev.sh`.\n\n`$ROOT/bazel-bin/java/com/google/gitiles/dev/dev` currently support the following flags:\n\n```\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n```\n\nIf we do what you suggest, only `--debug` will be supported, isn\u0027t it?",
      "parentUuid": "ae534d15_3e0a0ef9",
      "revId": "960c6fe9dcf85565f83f0580ea7cc8fd26fce266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}