// Copyright 2014 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
{namespace gitiles autoescape="contextual"}

/**
 * Detail page showing blame info for a file.
 *
 * @param title human-readable revision name.
 * @param repositoryName name of this repository.
 * @param? menuEntries menu entries.
 * @param? headerVariant variant name for custom header.
 * @param breadcrumbs breadcrumbs for this page.
 * @param data blob data, matching the params for .blobBox.
 * @param codemirror codemirror configuration for .header.
 * @param? regions for non-binary files, list of blame regions with the
 *     following keys:
 *       abbrevSha: abbreviated SHA-1 of revision for this line; if missing,
 *           assume blame info is missing.
 *       author: author information with at least "name" and "relativeTime"
 *           keys.
 *       relativeTime: relative time of the revision
 *       count: line count
 *       blameUrl: URL for a blame of this file at this commit
 *       commitUrl: URL for detail about the commit
 *       diffUrl: URL for a diff of this file at this commit
 */
{template .blameDetail}
{if $regions}
  {call .header data="all" /}

  <span id="git-blame"></span>
  <script type="text/javascript">
    var cm = CodeMirror(document.getElementById("git-blame"), {lb}
      value: "{$data.data}",
      {if isNonnull($data.codemirror.mode)}mode: "{$data.codemirror.mode}",{/if}
      lineNumbers: true,
      readOnly: true,
      gutters: ["blameGutter"]
    {rb});


    var div;
    {let $i: 0 /}
    {foreach $region in $regions}
      // TODO(dborowitz): Use client-side Soy rendering instead.
      div = document.createElement("div");
      div.className = "blameRegion";
      div.innerHTML = '
          <a href="{$region.commitUrl}" class="regionLine"> \
            <span class="sha1">{$region.abbrevSha}</span> \
            <span class="author">{$region.author.name}</span> \
            <span class="time">- {$region.author.relativeTime}</span> \
          </a> \
          <div class="regionMenu"> \
            <span class="regionMenuLinks"> \
              [<a href="{$region.commitUrl}">commit</a>] \
              [<a href="{$region.diffUrl}">diff</a>] \
              [<a href="{$region.blameUrl}">blame</a>] \
            </span> \
          </div> \
          ';
      cm.setGutterMarker({$i}, "blameGutter", div);
      {let $i: $i + $region.count /}
    {/foreach}
  </script>
{else}
  {call .header data="all" /}
  {call .blobDetail data="$data" /}
  <div class="file-binary">
    {msg desc="blame not available for binary file"}
      No blame information available
    {/msg}
  </div>
{/if}

{call .footer /}
{/template}
