{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2597e8f_e0a4a393",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3968896
      },
      "writtenOn": "2025-03-28T23:24:11Z",
      "side": 1,
      "message": "Bkh",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "298feb49_235e3371",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3951317
      },
      "writtenOn": "2025-03-30T14:48:24Z",
      "side": 1,
      "message": "459223: LogServlet: enable Commit Graph and Bloom Filter serving | https://gerrit-review.googlesource.com/c/gitiles/+/459223",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16660d18_5847794d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3952551
      },
      "writtenOn": "2025-04-03T08:19:44Z",
      "side": 1,
      "message": "Erick Reyes Gonzalez",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a5ea450_0f5ee946",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3237898
      },
      "writtenOn": "2025-04-05T19:41:36Z",
      "side": 1,
      "message": "2",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a45a7e3_6e074fda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3694754
      },
      "writtenOn": "2025-05-01T18:26:01Z",
      "side": 1,
      "message": "I5e2d7f00df67708c41e2509d5a12e3661a0cecd9",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "187f3e52_0d3194aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3694754
      },
      "writtenOn": "2025-05-01T18:53:47Z",
      "side": 1,
      "message": "https://gerrit.googlesource.com/gitiles",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52ade89d_268c7a9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3694754
      },
      "writtenOn": "2025-05-01T18:54:14Z",
      "side": 1,
      "message": ".. _secret:\n\nSecret\n\u003d\u003d\u003d\u003d\u003d\u003d\n\nA Secret is a collection of private data for use by one or more jobs.\nIn order to maintain the security of the data, the values are usually\nencrypted, however, data which are not sensitive may be provided\nunencrypted as well for convenience.\n\nA Secret may only be used by jobs defined within the same project.\nNote that they can be used by any branch of that project, so if a\nproject\u0027s branches have different access controls, consider whether\nall branches of that project are equally trusted before using secrets.\n\nTo use a secret, a :ref:`job` must specify the secret in\n:attr:`job.secrets`.  With one exception, secrets are bound to the\nplaybooks associated with the specific job definition where they were\ndeclared.  Additional pre or post playbooks which appear in child jobs\nwill not have access to the secrets, nor will playbooks which override\nthe main playbook (if any) of the job which declared the secret.  This\nprotects against jobs in other repositories declaring a job with a\nsecret as a parent and then exposing that secret.\n\nThe exception to the above is if the\n:attr:`job.secrets.pass-to-parent` attribute is set to true.  In that\ncase, the secret is made available not only to the playbooks in the\ncurrent job definition, but to all playbooks in all parent jobs as\nwell.  This allows for jobs which are designed to work with secrets\nwhile leaving it up to child jobs to actually supply the secret.  Use\nthis option with care, as it may allow the authors of parent jobs to\naccidentially or intentionally expose secrets.  If a secret with\n`pass-to-parent` set in a child job has the same name as a secret\navailable to a parent job\u0027s playbook, the secret in the child job will\nnot override the parent, instead it will simply not be available to\nthat playbook (but will remain available to others).\n\nIt is possible to use secrets for jobs defined in :term:`config\nprojects \u003cconfig-project\u003e` as well as :term:`untrusted projects\n\u003cuntrusted-project\u003e`, however their use differs slightly.  Because\nplaybooks in a config project which use secrets run in the\n:term:`trusted execution context` where proposed changes are not used\nin executing jobs, it is safe for those secrets to be used in all\ntypes of pipelines.  However, because playbooks defined in an\nuntrusted project are run in the :term:`untrusted execution context`\nwhere proposed changes are used in job execution, it is dangerous to\nallow those secrets to be used in pipelines which are used to execute\nproposed but unreviewed changes.  By default, pipelines are considered\n`pre-review` and will refuse to run jobs which have playbooks that use\nsecrets in the untrusted execution context (including those subject to\n:attr:`job.secrets.pass-to-parent` secrets) in order to protect\nagainst someone proposing a change which exposes a secret.  To permit\nthis (for instance, in a pipeline which only runs after code review),\nthe :attr:`pipeline.post-review` attribute may be explicitly set to\n``true``.\n\nIn some cases, it may be desirable to prevent a job which is defined\nin a config project from running in a pre-review pipeline (e.g., a job\nused to publish an artifact).  In these cases, the\n:attr:`job.post-review` attribute may be explicitly set to ``true`` to\nindicate the job should only run in post-review pipelines.\n\nIf a job with secrets is unsafe to be used by other projects, the\n:attr:`job.allowed-projects` attribute can be used to restrict the\nprojects which can invoke that job.  If a job with secrets is defined\nin an `untrusted-project`, `allowed-projects` is automatically set to\nthat project only, and can not be overridden (though a\n:term:`config-project` may still add the job to any project\u0027s pipeline\nregardless of this setting; do so with caution as other projects may\nexpose the source project\u0027s secrets).\n\nSecrets, like most configuration items, are unique within a tenant,\nthough a secret may be defined on multiple branches of the same\nproject as long as the contents are the same.  This is to aid in\nbranch maintenance, so that creating a new branch based on an existing\nbranch will not immediately produce a configuration error.\n\nWhen the values of secrets are passed to Ansible, the ``!unsafe`` YAML\ntag is added which prevents them from being evaluated as Jinja\nexpressions.  This is to avoid a situation where a child job might\nexpose a parent job\u0027s secrets via template expansion.\n\nHowever, if it is known that a given secret value can be trusted, then\nthis limitation can be worked around by using the following construct\nin a playbook:\n\n.. code-block:: yaml\n\n   - set_fact:\n       unsafe_var_eval: \"{{ hostvars[\u0027localhost\u0027].secretname.var }}\"\n\nThis will force an explicit template evaluation of the `var` attribute\non the `secretname` secret.  The results will be stored in\nunsafe_var_eval.\n\n.. attr:: secret\n\n   The following attributes must appear on a secret:\n\n   .. attr:: name\n      :required:\n\n      The name of the secret, used in a :ref:`job` definition to\n      request the secret.\n\n   .. attr:: data\n      :required:\n\n      A dictionary which will be added to the Ansible variables\n      available to the job.  The values can be any of the normal YAML\n      data types (strings, integers, dictionaries or lists) or\n      encrypted strings.  See :ref:`encryption` for more information.",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f57e7ac_c82b1173",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3881814
      },
      "writtenOn": "2025-05-02T04:08:10Z",
      "side": 1,
      "message": "hi",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc480edb_ec37484a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4076749
      },
      "writtenOn": "2025-05-16T12:36:38Z",
      "side": 1,
      "message": "Gracias",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22ff6f89_b8ae265f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4090037
      },
      "writtenOn": "2025-05-18T22:08:58Z",
      "side": 1,
      "message": "g i",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a863813_b5eebeb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4090037
      },
      "writtenOn": "2025-05-18T22:09:34Z",
      "side": 1,
      "message": "resate",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "797290cb_4a7e3886",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3970063
      },
      "writtenOn": "2025-05-23T01:33:55Z",
      "side": 1,
      "message": "omairakarate85@gmail.com 0105diaz@gmail.com",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d389b87_614c6047",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 3816279
      },
      "writtenOn": "2025-06-14T07:38:02Z",
      "side": 1,
      "message": "Review",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d715c0f_aa404e2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4214468
      },
      "writtenOn": "2025-07-07T18:56:51Z",
      "side": 1,
      "message": "68.07.08",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa991d77_cea9b153",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4260031
      },
      "writtenOn": "2025-08-01T12:25:50Z",
      "side": 1,
      "message": "Adb",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3efebe96_e6c71e40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 4254243
      },
      "writtenOn": "2025-08-03T01:33:30Z",
      "side": 1,
      "message": "459223",
      "revId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"],"atomExplanations":{"value":{"label:Verified=MAX":"","label:Verified=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Want-Code-Review-From-All",
        "description": {
          "value": "A \u0027Code-Review\u0027 vote is required from all human reviewers (service users that are reviewers are ignored)."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "footer:\"Want-Code-Review: all\" -label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"footer:\"Want-Code-Review: all\" -label:Code-Review>=1,users=human_reviewers"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review>=1,users=human_reviewers"],"failingAtoms":["footer:\"Want-Code-Review: all\""],"atomExplanations":{"value":{"footer:\"Want-Code-Review: all\"":"","label:Code-Review>=1,users=human_reviewers":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review>=1,users=human_reviewers"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b65fdf46c7bae589e11151ca834e8bd8319e86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}