{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9ebce9_3b2d1450",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-14T23:14:52Z",
      "side": 1,
      "message": "There\u0027s a whole bunch of background above this, but this is the only mention of a problem that would make me guess why you\u0027re making this change and it\u0027s still not enough for me to really know why. What\u0027s the StackOverflowException issue? Can you start your commit message with mentioning that first? The subject line should probably start with \"Fix:\" too if this is a bugfix.\n\nPlease remember that links to an issue are not a substitute for having the necessary content in the commit message.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 8
      },
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec31097_5db04c67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-09-19T09:51:30Z",
      "side": 1,
      "message": "bug link seems broken, I get 404",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "892e5d03_e6e9bcfe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-19T10:05:57Z",
      "side": 1,
      "message": "Yeah I noticed the same.\nGitiles is configured to parse issues to github.\nThe issue however was recorded in monorail [1].\n\nIt seems like no other CR for gitiles have monorail issue numbers.\n\n[1]https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d14914",
      "parentUuid": "4ec31097_5db04c67",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca7338f1_f102cbb4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-09-19T10:09:10Z",
      "side": 1,
      "message": "then I would replace this by the full URL",
      "parentUuid": "892e5d03_e6e9bcfe",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3e17b9d_b818fe0c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-01-07T12:49:49Z",
      "side": 1,
      "message": "To be a little bit picky.\nThat [1] is a gitiles-plugins issue, whereas this is really a gitiles issue. Gitiles issues are still tracked in the GitHub issue-tracker[1].\nYou should probably open a gitiles issue in the gitiles issue-tracker and reference that one from here and also from the gitiles-plugin issue[1].\n\nThe gitiles-plugin issue [1] should be referenced in the message of the commit where gitiles-servlet is upgraded to a version containing the fix.\n\n[1] https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d14914\n[2] https://github.com/google/gitiles/issues",
      "parentUuid": "ca7338f1_f102cbb4",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e0420cc_6a4c91c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-16T20:13:12Z",
      "side": 1,
      "message": "I am not sure the content batching is actually going to resolve/mitigate this issue.\n\nThe stack overflow is caused by \"Catastrophic Backtracking\" [1], which often occurs when:\n\n```\nsomething towards the end of the string causes the string to not match.\n```\n\nThis issue not strictly related to the length of the content.\nIn fact, this is an example of catastrophic backtracking easily reproduced against a very short string [2].\n\nFor this reason, I don\u0027t think splitting into baches is the right solution.\n\nDave Borowitz was aware of the inherent complexity of this issue already in 2014 when he proposed and merged this workaround[3], rather than the actual fix to the problem.\n\nThis particular occurrence of \"StackOverFlow\" tested by this change deals with the regular expression used to decorate \"default-code\" (used for files with no extension). This regular expression heavily uses back-tracking and it is quite complex to reason about. [3]\n\nI have also spent a decent amount of time trying to figure out an alternative approach, but I failed.\n\nUnfortunately, by the look of things, I don\u0027t see any other viable approach other than trying to move away from java-prettify.\n\n\nThoughts?\n\n\n[1]https://community.appway.com/screen/kb/article/checking-strings-avoiding-catastrophic-backtracking-1482810891360\n\n[2]https://regex101.com/r/gj6kBf/1\n\n[3]https://pastebin.com/exKUFA1x",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "561d93ce_d702f52c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-16T20:17:57Z",
      "side": 1,
      "message": "I am not sure the content batching is actually going to resolve/mitigate this issue.\n\nThe stack overflow is caused by \"Catastrophic Backtracking\" [1], which often occurs when:\n\n```\nsomething towards the end of the string causes the string to not match.\n```\n\nThis issue not strictly related to the length of the content.\nIn fact, this is an example of catastrophic backtracking easily reproduced against a very short string [2].\n\nFor this reason, I don\u0027t think splitting into baches is the right solution.\n\nDave Borowitz was aware of the inherent complexity of this issue already in 2014 when he proposed and merged this workaround[3], rather than the actual fix to the problem.\n\nThis particular occurrence of \"StackOverFlow\" tested by this change deals with the regular expression used to decorate \"default-code\" (used for files with no extension). This regular expression heavily uses back-tracking and it is quite complex to reason about. [3]\n\nI have also spent a decent amount of time trying to figure out an alternative approach, but I failed.\n\nUnfortunately, by the look of things, I don\u0027t see any other viable approach other than trying to move away from java-prettify.\n\n\nThoughts?\n\n\n[1]https://community.appway.com/screen/kb/article/checking-strings-avoiding-catastrophic-backtracking-1482810891360\n\n[2]https://regex101.com/r/gj6kBf/1\n\n[3]https://pastebin.com/exKUFA1x",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56084f7a_45f91a28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-16T20:17:57Z",
      "side": 1,
      "message": "Unresolving for visibility",
      "parentUuid": "3e0420cc_6a4c91c1",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13330e17_1f0ba86b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-16T20:28:06Z",
      "side": 1,
      "message": "\u003e [3]https://pastebin.com/exKUFA1x\n\nI can\u0027t get to this link. \"This page is no longer available. It has either expired, been removed by its creator, or removed by one of the Pastebin staff.\"\n\n\u003e Unfortunately, by the look of things, I don\u0027t see any other viable approach other than trying to move away from java-prettify.\n\nIs there a viable approach to move away?",
      "parentUuid": "56084f7a_45f91a28",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6b142f3_71652938",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-09-16T20:57:30Z",
      "side": 1,
      "message": "\u003e Is there a viable approach to move away?\nI was considering that as well but to do that we have to find another highlighting library and replace java-prettify with that one. Problem is that we have to make sure that it does not have the same issue plus highlighting is similar",
      "parentUuid": "13330e17_1f0ba86b",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "995e8bab_ca69a832",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-09-16T21:01:05Z",
      "side": 1,
      "message": "\u003e I am not sure the content batching is actually going to resolve/mitigate this issue\n\nI agree that is not solving the issue but it is improving the situation. I was testing this solution on files which I could find on gerrithub.io and it did work on them. Reducing the number of StackOverflowException is always a good thing ;)",
      "parentUuid": "f6b142f3_71652938",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "570ce4fd_3bd9569f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-16T21:03:13Z",
      "side": 1,
      "message": "I am not sure the content batching is actually going to resolve/mitigate this issue.\n\nThe stack overflow is caused by \"Catastrophic Backtracking\" [1], which often occurs when:\n\n```\nsomething towards the end of the string causes the string to not match.\n```\n\nThis issue not strictly related to the length of the content.\nIn fact, this is an example of catastrophic backtracking easily reproduced against a very short string [2].\n\nFor this reason, I don\u0027t think splitting into baches is the right solution.\n\nDave Borowitz was aware of the inherent complexity of this issue already in 2014 when he proposed and merged this workaround[3], rather than the actual fix to the problem.\n\nThis particular occurrence of \"StackOverFlow\" tested by this change deals with the regular expression used to decorate \"default-code\" (used for files with no extension). This regular expression heavily uses back-tracking and it is quite complex to reason about. [3]\n\nI have also spent a decent amount of time trying to figure out an alternative approach, but I failed.\n\nUnfortunately, by the look of things, I don\u0027t see any other viable approach other than trying to move away from java-prettify.\n\n\nThoughts?\n\n\n[1]https://community.appway.com/screen/kb/article/checking-strings-avoiding-catastrophic-backtracking-1482810891360\n\n[2]https://regex101.com/r/gj6kBf/1\n\n[3]https://pastebin.com/exKUFA1x",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "883a81a8_330e74dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-16T21:03:13Z",
      "side": 1,
      "message": "\u003e I can\u0027t get to this link. \"This page is no longer available. It has either expired, been removed by its creator, or removed by one of the Pastebin staff.\"\n\nI think pastebin.com removes it for XSS reasosn.\npastebin.pl[1] is more relaxed 😊\n\n\n[1] https://pastebin.pl/view/raw/33d353c3",
      "parentUuid": "995e8bab_ca69a832",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ba23e45_bd83e905",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-05T18:54:48Z",
      "side": 1,
      "message": "Should this change be shelved?",
      "revId": "180ca876991b6aae5ac29fb5653a618990144a0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}