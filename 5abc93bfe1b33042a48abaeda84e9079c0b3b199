{
  "comments": [
    {
      "key": {
        "uuid": "ca5d39d4_462492bb",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/GitilesView.java",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T18:52:38Z",
      "side": 1,
      "message": "nits: how about: trimLeadingAndTrailingSlash\n\nAlso, this is more concise:\n\nreturn CharMatcher.is(\u0027/\u0027).trimFrom(str);",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae9112b_005c462f",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/GitilesView.java",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-06-24T20:02:06Z",
      "side": 1,
      "message": "No, CharMatcher.trimFrom trims any numbers of slashes. There are places where it makes sense (others where it doesn\u0027t) to treat /foo/ and foo the same (hence this method), but we *don\u0027t* want to treat /foo and //foo the same.\n\nThe reason we don\u0027t want to treat /foo and //foo the same is basically that git doesn\u0027t treat foo/bar and foo//bar the same:\n\n $ git cat-file -p HEAD:gitiles-dev/src\n 040000 tree 97c895c413ea8189a05bf11788478aa61f84d154    main\n $ git cat-file -p HEAD:gitiles-dev//src\n fatal: Not a valid object name HEAD:gitiles-dev//src\n\nSo it would be weird for Gitiles to magically collapse multiple slashes at certain points in the path and not at others.",
      "parentUuid": "ca5d39d4_462492bb",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca5d39d4_0650da0e",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/GitilesView.java",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T21:12:34Z",
      "side": 1,
      "message": "trimFrom only removes consecutive leading and trailing slashes. \n\nCollapsing is a different issue. trimAndCollapseFrom would do what you are describing.\n\nhttp://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/CharMatcher.html#trimFrom(java.lang.CharSequence)",
      "parentUuid": "0ae9112b_005c462f",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca5d39d4_8644ca62",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T18:52:38Z",
      "side": 1,
      "message": "nit: isEmptyOrSlash",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae9112b_e06042e3",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-06-24T20:02:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca5d39d4_8644ca62",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae9112b_20218aab",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T18:52:38Z",
      "side": 1,
      "message": "it would be nice if you could trim the leading slash here for all commands.",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae9112b_a03f5ac1",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T19:02:17Z",
      "side": 1,
      "message": "ignore. you handled this in a future change",
      "parentUuid": "0ae9112b_20218aab",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ae9112b_c00ffe3f",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T18:52:38Z",
      "side": 1,
      "message": "weird. why doesn\u0027t the result just contain the PathPart instead of this PathStart?",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca5d39d4_662c2e9c",
        "filename": "gitiles-servlet/src/main/java/com/google/gitiles/ViewFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1002517
      },
      "writtenOn": "2013-06-24T19:02:17Z",
      "side": 1,
      "message": "ignore. you handled this in a future change",
      "parentUuid": "0ae9112b_c00ffe3f",
      "revId": "5abc93bfe1b33042a48abaeda84e9079c0b3b199",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}